{"mappings":"AAAAA,EAAEC,UAAUC,OAAM,WACd,IAEIC,EADAC,EAAc,EAsElB,SAASC,EAA0BC,GAC/BN,EAAEO,KAAK,CACHC,KAAM,MACNC,IAAK,wDACLC,OAAO,EACPC,KAAM,CACFC,OAAQ,mCACRC,QAASP,EACTQ,KAAMV,EACNW,KAhFQ,IAkFZC,SAAU,OACVC,QAAS,SAASC,GACd,GAAIA,EAAKC,WAAaD,EAAKC,UAAUC,OAAQ,CACzC,IAAIA,EAASF,EAAKC,UAAUC,OACxBC,EAAaC,KAAKC,KAAKL,EAAKJ,KAAKU,cAtFjC,KAWxB,SAAuBJ,GACnB,IAAIK,EAAkBzB,EAAE,qBAGxB,GAFAyB,EAAgBC,QAEXN,GAA4B,IAAlBA,EAAOO,OAAtB,CAKA,IACIC,EADAC,EAAa,EAEjBT,EAAOU,SAAQ,SAASC,GAChBF,EAAa,GAAM,IACnBD,EAAM5B,EAAE,2BACRyB,EAAgBO,OAAOJ,IAE3B,IAAIK,EAAWjC,EAAE,6BACbkC,EAAalC,EAAE,SACf+B,EAAMI,QAAUJ,EAAMI,OAAOR,OAAS,GACtCO,EAAWE,KAAK,MAAOL,EAAMI,OAAO,GAAG1B,KACvCyB,EAAWE,KAAK,MAAOL,EAAMM,MAC7BH,EAAWE,KAAK,QAAS,OACzBF,EAAWE,KAAK,SAAU,SAG1BF,EAAWE,KAAK,MAAO,mBACvBF,EAAWE,KAAK,MAAO,sBACvBF,EAAWE,KAAK,QAAS,OACzBF,EAAWE,KAAK,SAAU,QAE9BH,EAASD,OAAOE,GAEhBD,EAASD,OAAO,OAASD,EAAMM,KAAO,SACtCJ,EAASD,OAAO,MAAQD,EAAMO,MAAMC,MAAMC,UAAY,QAClDT,EAAMZ,WAAaY,EAAMZ,UAAUsB,QAAUV,EAAMZ,UAAUsB,OAAOd,OAAS,EAC7EM,EAASD,OAAO,MAAQD,EAAMZ,UAAUsB,OAAO,GAAGJ,KAAO,QAEzDJ,EAASD,OAAO,0CAEpBJ,EAAII,OAAOC,GACXJ,G,SAnCAJ,EAAgBiB,KAAK,yB,CAuETC,CAAcvB,GA/BlC,SAA2BC,G,kBAKnB,IAAIuB,EAAa5C,EAAE,WAAa6C,EAAI,aACpCD,EAAWE,MAAM,WACb1C,EAAcyC,EACdxC,GACH,EAAC0C,KAAK,KAAMF,IACbG,EAAoBhB,OAAOY,E,EAT3BI,EAAsBhD,EAAE,yBAC5BgD,EAAoBtB,QAEpB,IADA,IAAIuB,EAAoB3B,KAAK4B,IAAI7B,EAAY,IACpCwB,EAAI,EAAGA,GAAKI,EAAmBJ,IAAGM,EAAAN,E,CA4B3BO,CAAkB/B,E,MAElBrB,EAAE,qBAAqB0C,KAAK,yB,EAGpCW,MAAO,SAASC,EAAKC,EAAQC,GACzBC,QAAQJ,MAAM,yBAA0BG,GACxCxD,EAAE,qBAAqB0C,KAAK,wD,IAMxC1C,EAAE,kBAAkB0D,GAAG,SAAS,WAC5B,IAjGcC,EAAMC,EAiGhBtD,EAAaN,EAAE6D,MAAMC,MAAMC,cAjGjBJ,EAkGL,WACLtD,EAA0BC,E,EAnGVsD,EAoGjB,IAnGHI,aAAa7D,GACbA,EAAgB8D,WAAWN,EAAMC,E,IAsGrCvD,EAA0B,G","sources":["src/script/header.js"],"sourcesContent":["$(document).ready(function() {\n    let eventsPerPage = 20;\n    let currentPage = 1;\n    let debounceTimer;\n\n    // Function to debounce search input\n    function debounce(func, wait) {\n        clearTimeout(debounceTimer);\n        debounceTimer = setTimeout(func, wait);\n    }\n\n// Function to display events\nfunction displayEvents(events) {\n    let eventsContainer = $('#events-container');\n    eventsContainer.empty();\n\n    if (!events || events.length === 0) {\n        eventsContainer.html('<p>No events found</p>');\n        return;\n    }\n\n    let eventCount = 0;\n    let row;\n    events.forEach(function(event) {\n        if (eventCount % 4 === 0) {\n            row = $('<div class=\"row\"></div>');\n            eventsContainer.append(row);\n        }\n        let eventDiv = $('<div class=\"event\"></div>');\n        let eventImage = $('<img>');\n        if (event.images && event.images.length > 0) {\n            eventImage.attr('src', event.images[0].url);\n            eventImage.attr('alt', event.name);\n            eventImage.attr('width', '267');\n            eventImage.attr('height', '220');\n        } else {\n            // Placeholder image or handle no image case\n            eventImage.attr('src', 'placeholder.jpg');\n            eventImage.attr('alt', 'No Image Available');\n            eventImage.attr('width', '267');\n            eventImage.attr('height', '220');\n        }\n        eventDiv.append(eventImage);\n\n        eventDiv.append('<h2>' + event.name + '</h2>');\n        eventDiv.append('<p>' + event.dates.start.localDate + '</p>');\n        if (event._embedded && event._embedded.venues && event._embedded.venues.length > 0) {\n            eventDiv.append('<p>' + event._embedded.venues[0].name + '</p>');\n        } else {\n            eventDiv.append('<p>Venue information not available</p>');\n        }\n        row.append(eventDiv);\n        eventCount++;\n    });\n}\n\n// Function to display pagination\nfunction displayPagination(totalPages) {\n    let paginationContainer = $('#pagination-container');\n    paginationContainer.empty();\n    let numPagesToDisplay = Math.min(totalPages, 13); // Limit to 13 pages\n    for (let i = 1; i <= numPagesToDisplay; i++) {\n        let pageButton = $('<button>' + i + '</button>');\n        pageButton.click(function() {\n            currentPage = i; // Update currentPage when a pagination button is clicked\n            fetchDataAndDisplayEvents();\n        }.bind(null, i)); // Pass page number as parameter\n        paginationContainer.append(pageButton);\n    }\n}\n\n    // Function to fetch events from API\n    function fetchDataAndDisplayEvents(searchTerm) {\n        $.ajax({\n            type: \"GET\",\n            url: \"https://app.ticketmaster.com/discovery/v2/events.json\",\n            async: true,\n            data: {\n                apikey: \"N7FCeNuTwKBillrRlUtN6okNTN2WqI0N\",\n                keyword: searchTerm,\n                page: currentPage,\n                size: eventsPerPage\n            },\n            dataType: \"json\",\n            success: function(json) {\n                if (json._embedded && json._embedded.events) {\n                    let events = json._embedded.events;\n                    let totalPages = Math.ceil(json.page.totalElements / eventsPerPage);\n                    displayEvents(events);\n                    displayPagination(totalPages);\n                } else {\n                    $('#events-container').html('<p>No events found</p>');\n                }\n            },\n            error: function(xhr, status, err) {\n                console.error(\"Error fetching events:\", err);\n                $('#events-container').html('<p>Error fetching events. Please try again later.</p>');\n            }\n        });\n    }\n\n    // Search input event handler\n    $('#header-search').on('input', function() {\n        let searchTerm = $(this).val().toLowerCase(); // Convert search term to lowercase\n        debounce(function() {\n            fetchDataAndDisplayEvents(searchTerm);\n        }, 300); // Debounce time set to 300 milliseconds\n    });\n\n    // Initial data load\n    fetchDataAndDisplayEvents('');\n});"],"names":["$","document","ready","debounceTimer","currentPage","fetchDataAndDisplayEvents","searchTerm","ajax","type","url","async","data","apikey","keyword","page","size","dataType","success","json","_embedded","events","totalPages","Math","ceil","totalElements","eventsContainer","empty","length","row","eventCount","forEach","event","append","eventDiv","eventImage","images","attr","name","dates","start","localDate","venues","html","displayEvents","pageButton","i","click","bind","paginationContainer","numPagesToDisplay","min","_loop","displayPagination","error","xhr","status","err","console","on","func","wait","this","val","toLowerCase","clearTimeout","setTimeout"],"version":3,"file":"index.b978914a.js.map"}